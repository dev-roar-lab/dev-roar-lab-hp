#!/bin/bash

# S3„Å®CloudFront„Å∏„ÅÆ„Éá„Éó„É≠„Ç§„Çπ„ÇØ„É™„Éó„Éà
# ‰ΩøÁî®ÊñπÊ≥ï: ./scripts/deploy-to-s3.sh [stack-name]

set -e

STACK_NAME="${1:-dev-roar-lab-hp}"

echo "üì¶ Building Next.js application..."
npm run build

echo "üîç Getting bucket name from CloudFormation stack: $STACK_NAME"
BUCKET_NAME=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`WebsiteBucketName`].OutputValue' \
  --output text)

if [ -z "$BUCKET_NAME" ]; then
  echo "‚ùå Error: Could not find bucket name. Make sure the CloudFormation stack exists."
  exit 1
fi

echo "üì§ Uploading to S3 bucket: $BUCKET_NAME"
aws s3 sync out/ s3://$BUCKET_NAME/ --delete

echo "üîç Getting CloudFront distribution ID..."
DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' \
  --output text)

if [ -z "$DISTRIBUTION_ID" ]; then
  echo "‚ùå Error: Could not find CloudFront distribution ID."
  exit 1
fi

echo "üîÑ Creating CloudFront invalidation..."
INVALIDATION_ID=$(aws cloudfront create-invalidation \
  --distribution-id "$DISTRIBUTION_ID" \
  --paths "/*" \
  --query 'Invalidation.Id' \
  --output text)

echo "‚úÖ Deployment complete!"
echo ""
echo "üìä Summary:"
echo "  - S3 Bucket: $BUCKET_NAME"
echo "  - CloudFront Distribution: $DISTRIBUTION_ID"
echo "  - Invalidation ID: $INVALIDATION_ID"
echo ""
echo "üåê Getting website URL..."
WEBSITE_URL=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`WebsiteURL`].OutputValue' \
  --output text)

echo "  - Website URL: $WEBSITE_URL"
echo ""
echo "‚è±Ô∏è  Note: CloudFront invalidation may take a few minutes to complete."
