name: Deploy to AWS

# Trigger only after CI workflow completes successfully on main branch
# This ensures deployment only happens when all tests pass
on:
  workflow_run:
    workflows: ['CI']
    types: [completed]
    branches: [main]

permissions:
  id-token: write
  contents: read
  actions: read # Required to download artifacts from CI workflow

jobs:
  deploy:
    # Only run if CI workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    # Require manual approval via GitHub Environment
    # Configure in: Settings → Environments → production
    environment: production

    steps:
      # Download build artifacts from CI workflow
      # No need to rebuild - use cached artifacts for faster deployment
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: out/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # AWS authentication using OIDC and Role Chaining
      # Secrets should be configured in the 'production' Environment
      # (not Repository secrets) for additional security
      - name: Configure AWS credentials (Bridge Role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_BRIDGE_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Assume execution role (Role Chaining)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_EXECUTION_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-chaining: true

      - name: Deploy to S3
        run: |
          echo "Uploading to S3 bucket: ${{ secrets.S3_BUCKET_NAME }}"
          aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }}/ --delete

      - name: Invalidate CloudFront cache
        id: invalidation
        run: |
          echo "Creating CloudFront invalidation for distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          INVALIDATION_ID=$(aws cloudfront create-invalidation \
            --distribution-id "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --paths "/*" \
            --query 'Invalidation.Id' \
            --output text)

          echo "invalidation-id=$INVALIDATION_ID" >> $GITHUB_OUTPUT

      - name: Deployment summary
        run: |
          echo "## Deployment Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Item | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| S3 Bucket | \`${{ secrets.S3_BUCKET_NAME }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| CloudFront Distribution | \`${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Invalidation ID | \`${{ steps.invalidation.outputs.invalidation-id }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "> :hourglass: CloudFront invalidation may take a few minutes to complete." >> $GITHUB_STEP_SUMMARY
